name: Validate item data

permissions:
  issues: write

on:
  pull_request:
    paths:
      - "items/**/*.yml"
      - "schemas/**/*"
      - ".github/workflows/**/*"
      - "builder/**/*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pipenv

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - name: Install python dependencies
        working-directory: builder
        run: pipenv sync

      - name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install ajv-cli
        run: |
          npm install -g ajv-cli

      - name: Run validation and composing script
        working-directory: builder
        run: pipenv run python run.py -i ../items -is ../schemas/single-item.schema.json -o ../build/item-data.json -eo ../validation-errors.txt

      - name: Save validation errors as output
        id: save-validation-errors
        if: ${{ failure() }}
        run: |
          echo "validation-errors<<EOF" >> $GITHUB_OUTPUT
          echo "$(cat validation-errors.txt)" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - uses: actions/github-script@v7
        if: ${{ failure() && steps.save-validation-errors.outcome == 'success'}}
        with:
          script: |
            if (!context.issue.number) {
              console.log("No issue number in context, skipping comment")
              return;
            }

            let fs = require('fs');
            let fileContents = fs.readFileSync('validation-errors.txt').toString();

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fileContents
            });

      - name: Upload script output as build artifact
        uses: actions/upload-artifact@v4
        id: upload-artifact
        if: ${{ success() }}
        with:
          name: item-data
          path: build/item-data.json
          if-no-files-found: error
